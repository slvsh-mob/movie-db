{"ast":null,"code":"var _jsxFileName = \"/Users/will/Desktop/Assessment/movie_db/src/components/sidebar/sidebar.js\";\nimport React, { useEffect } from 'react';\nimport SidebarElement from './sidebarElement';\n\nconst Sidebar = props => {\n  const [links, setLinks] = React.useState([]);\n  const [accessLevel, setAccessLevel] = React.useState('admin');\n  const [loading, setLoading] = React.useState(false);\n  useEffect(() => {\n    async function resolveLinks() {\n      setLoading(true);\n      const privilege = await localStorage.getItem(\"accessLevel\");\n      const temp = await checkAccess(privilege);\n    }\n  }, []);\n  console.log('access level' + accessLevel);\n\n  const checkAccess = privilege => {\n    if (privilege == 'admin') {\n      var sidebar_links_admin = [{\n        index: 1,\n        heading: \"Add New Movie\",\n        title: \"Add Movie\",\n        link: \"/createMovie\"\n      }, {\n        index: 2,\n        heading: \"View Multiview\",\n        title: \"Multiview\",\n        link: \"/multiview\"\n      }, {\n        index: 3,\n        heading: \"View Listview\",\n        title: \"Listview\",\n        link: \"/listview\"\n      }, {\n        index: 4,\n        heading: \"View Singleview\",\n        title: \"Singleview\",\n        link: \"/singleview\"\n      }];\n      setLinks(sidebar_links_admin);\n    }\n\n    if (privilege == 'user') {\n      var sidebar_links_user = [{\n        index: 1,\n        heading: \"View Multiview\",\n        title: \"Multiview\",\n        link: \"/multiview\"\n      }, {\n        index: 2,\n        heading: \"View Listview\",\n        title: \"Listview\",\n        link: \"/listview\"\n      }, {\n        index: 3,\n        heading: \"View Singleview\",\n        title: \"Singleview\",\n        link: \"/singleview\"\n      }];\n      setLinks(sidebar_links_user);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Loading\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, links.map((value, index) => {\n    return /*#__PURE__*/React.createElement(SidebarElement, {\n      input: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }\n    });\n  })));\n};\n\nconst test = {\n  color: \"white\",\n  textAlign: \"center\"\n};\nexport default Sidebar;","map":{"version":3,"sources":["/Users/will/Desktop/Assessment/movie_db/src/components/sidebar/sidebar.js"],"names":["React","useEffect","SidebarElement","Sidebar","props","links","setLinks","useState","accessLevel","setAccessLevel","loading","setLoading","resolveLinks","privilege","localStorage","getItem","temp","checkAccess","console","log","sidebar_links_admin","index","heading","title","link","sidebar_links_user","map","value","test","color","textAlign"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport SidebarElement from './sidebarElement'\n\nconst Sidebar = (props) => {\n    const [links, setLinks] = React.useState([])\n    const [accessLevel, setAccessLevel] = React.useState('admin')\n    const [loading, setLoading] = React.useState(false)\n\n\n    useEffect(() => {\n        async function resolveLinks() {\n            setLoading(true)\n            const privilege = await localStorage.getItem(\"accessLevel\")\n            const temp = await checkAccess(privilege)\n\n        }\n    }, [])\n\n    console.log('access level' + accessLevel)\n\n    const checkAccess = (privilege) => {\n        if(privilege == 'admin'){\n            var sidebar_links_admin = [\n                {\n                    index: 1,\n                    heading: \"Add New Movie\",\n                    title: \"Add Movie\",\n                    link: \"/createMovie\"\n                },\n                {\n                    index: 2,\n                    heading: \"View Multiview\",\n                    title: \"Multiview\",\n                    link: \"/multiview\"\n                },\n                {\n                    index: 3,\n                    heading: \"View Listview\",\n                    title: \"Listview\",\n                    link: \"/listview\"\n                },\n                {\n                    index: 4,\n                    heading: \"View Singleview\",\n                    title: \"Singleview\",\n                    link: \"/singleview\"\n                }\n            ]\n            setLinks(sidebar_links_admin)\n        }\n        if(privilege == 'user'){\n            var sidebar_links_user = [\n                {\n                    index: 1,\n                    heading: \"View Multiview\",\n                    title: \"Multiview\",\n                    link: \"/multiview\"\n                },\n                {\n                    index: 2,  \n                    heading: \"View Listview\",\n                    title: \"Listview\",\n                    link: \"/listview\"\n                },\n                {\n                    index: 3,\n                    heading: \"View Singleview\",\n                    title: \"Singleview\",\n                    link: \"/singleview\"\n                }\n            ]\n            setLinks(sidebar_links_user)\n        }\n    \n    }\n\n    return(\n        <div className=\"sidebar_div\">\n            {loading\n                ? <div>Loading</div>\n                : <div>{links.map((value, index) => {\n                    return <SidebarElement input={value} />\n                   })}</div>\n            }\n        </div>\n    );\n}\n\nconst test = {\n    color: \"white\",\n    textAlign: \"center\"\n}\n\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}