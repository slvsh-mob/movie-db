{"ast":null,"code":"var _jsxFileName = \"/Users/will/Desktop/Assessment/movie_db/src/routes/singleView.js\";\nimport React, { useEffect } from 'react';\nimport Navbar from '../components/navbar/navbar';\nimport Sidebar from '../components/sidebar/sidebar';\nimport Singleview from '../components/singleview/singleview';\nimport axios from 'axios';\nimport { MdSettingsEthernet } from 'react-icons/md';\nconst sidebar_options = {\n  marginTop: {\n    marginTop: \"2vh\"\n  },\n  blank: false,\n  blocks: {\n    item1: {\n      title: \"Add Movie\",\n      link: \"/createMovie\"\n    },\n    item2: {\n      title: \"List View\",\n      link: \"/listview\"\n    },\n    item3: {\n      title: \"Multi View\",\n      link: \"/multiview\"\n    },\n    item4: {\n      title: \"Single View\",\n      link: \"/singleview\"\n    }\n  }\n};\n\nconst SingleView = props => {\n  const [title, setTitle] = React.useState('');\n  const [poster, setPoster] = React.useState('');\n  const [year, setYear] = React.useState('');\n  const [synopsis, setSynopsis] = React.useState('');\n  const [runtime, setRuntime] = React.useState('');\n  const [rating, setRating] = React.useState('');\n  const [director, setDirector] = React.useState('');\n  const [genre, setGenre] = React.useState('');\n  console.log(props.location.query);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios({\n        method: \"Get\",\n        url: \"/movies/5edfc4110e4b720d4466ed63\"\n      });\n      const path = result.data[0];\n      setTitle(path.Title);\n      setPoster(path.Poster);\n      setYear(path.Year);\n      setSynopsis(path.Synopsis);\n      setRuntime(path.Runtime);\n      setRating(path.Rating);\n      setDirector(path.Director);\n      setGenre(path.Genre);\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, {\n    input: sidebar_options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Singleview, {\n    title: title,\n    poster: poster,\n    year: year,\n    synopsis: synopsis,\n    runtime: runtime,\n    rating: rating,\n    director: director,\n    genre: genre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default SingleView;","map":{"version":3,"sources":["/Users/will/Desktop/Assessment/movie_db/src/routes/singleView.js"],"names":["React","useEffect","Navbar","Sidebar","Singleview","axios","MdSettingsEthernet","sidebar_options","marginTop","blank","blocks","item1","title","link","item2","item3","item4","SingleView","props","setTitle","useState","poster","setPoster","year","setYear","synopsis","setSynopsis","runtime","setRuntime","rating","setRating","director","setDirector","genre","setGenre","console","log","location","query","fetchData","result","method","url","path","data","Title","Poster","Year","Synopsis","Runtime","Rating","Director","Genre"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport Navbar from '../components/navbar/navbar'\nimport Sidebar from '../components/sidebar/sidebar'\nimport Singleview from '../components/singleview/singleview'\nimport axios from 'axios'\nimport { MdSettingsEthernet } from 'react-icons/md'\n\nconst sidebar_options = {\n    marginTop: {\n        marginTop: \"2vh\"\n    },\n    blank: false,\n    blocks: {\n        item1: {\n            title: \"Add Movie\",\n            link: \"/createMovie\"\n        },\n        item2: {\n            title: \"List View\",\n            link: \"/listview\"\n        },\n        item3: {\n            title: \"Multi View\",\n            link: \"/multiview\"\n        },\n        item4: {\n            title: \"Single View\",\n            link: \"/singleview\"\n        }\n    }\n}\n\nconst SingleView = (props) => {\n    const [title, setTitle] = React.useState('')\n    const [poster, setPoster] = React.useState('')\n    const [year, setYear] = React.useState('')\n    const [synopsis, setSynopsis] = React.useState('')\n    const [runtime, setRuntime] = React.useState('')\n    const [rating, setRating] = React.useState('')\n    const [director, setDirector] = React.useState('')\n    const [genre, setGenre] = React.useState('')\n\n    console.log(props.location.query)\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const result = await axios({\n                method: \"Get\",\n                url: \"/movies/5edfc4110e4b720d4466ed63\"\n            })\n            const path = result.data[0]\n            setTitle(path.Title)\n            setPoster(path.Poster)\n            setYear(path.Year)\n            setSynopsis(path.Synopsis)\n            setRuntime(path.Runtime)\n            setRating(path.Rating)\n            setDirector(path.Director)\n            setGenre(path.Genre)\n        }\n        fetchData();\n    }, [])\n\n    return(\n        <div>\n            <Navbar />\n            <Sidebar input={sidebar_options}/>\n            <Singleview  title={title} poster={poster} year={year} synopsis={synopsis} runtime={runtime} rating={rating} director={director} genre={genre}/>\n        </div>\n    )\n}\n\nexport default SingleView"]},"metadata":{},"sourceType":"module"}